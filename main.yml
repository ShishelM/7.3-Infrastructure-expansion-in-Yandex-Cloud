---
- name: Configure Web Servers with Nginx
  hosts: webservers
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: true
        cache_valid_time: 3600
    
    - name: Ensure Nginx is installed
      package:
        name: nginx
        state: present
      
    - name: Start and enable Nginx service
      service:
        name: nginx
        state: started
        enabled: true
        
    - block:
      - name: Check Nginx service status
        service:
          name: nginx
          state: started
        register: nginx_status
        when: "'webservers' in group_names"

      - name: Verify Nginx response
        uri:
          url: http://localhost
          return_content: yes
        register: nginx_response
        when: "'webservers' in group_names"

      - name: Debug Nginx status
        debug:
          msg: "Nginx status: {{ nginx_status.state }} Response code: {{ nginx_response.status }}"
        when: "'webservers' in group_names"

      rescue:
        - name: Handle failure gracefully
          meta: clear_host_errors
          when: "'webservers' in group_names"

- name: Install PostgreSQL Server on Database Host
  hosts: database
  become: yes
  vars:
    pg_version: "15"  # Версия PostgreSQL
  tasks:
    - name: Add PostgreSQL repository key
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present
    
    - name: Add PostgreSQL repository to sources list
      apt_repository:
        repo: deb http://apt.postgresql.org/pub/repos/apt {{ ansible_lsb.codename }}-pgdg main
        state: present
      when: ansible_os_family == "Debian"
    
    - name: Install PostgreSQL server
      package:
        name: postgresql-{{ pg_version }}
        state: present
    
    - name: Enable and start PostgreSQL service
      service:
        name: postgresql
        state: started
        enabled: true
    
    - name: Check if PostgreSQL is running
      command: sudo systemctl status postgresql.service
      changed_when: false
    - block:
      - name: Get PostgreSQL version
        command: psql -V
        register: pg_version
        when: "'database' in group_names"

      - name: Debug PostgreSQL version
        debug:
          msg: "PostgreSQL Version: {{ pg_version.stdout_lines[-1].strip() }}"
        when: "'database' in group_names"

      rescue:
      - name: Handle failure gracefully
        meta: clear_host_errors
        when: "'database' in group_names"